<link rel="stylesheet" href="/admin/template/css/site.css">
<link rel="stylesheet" href="/admin/template/css/bootstrap.css">
<link rel="stylesheet" href="/admin/template/fonts/font-awesome/font-awesome.css">
<script src="/admin/template/vendor/jquery/jquery.js"></script>
<script src="/admin/template/vendor/bootstrap/bootstrap.js"></script>
<script src="/admin/template/vendor/chart-js/Chart.js"></script>
<script src="/socket.io/socket.io.js"></script>

<style>
.monitoring-card {
    background: #fff;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.stat-card {
    text-align: center;
    padding: 15px;
}

.stat-number {
    font-size: 2em;
    font-weight: bold;
    color: #2c3e50;
}

.stat-label {
    color: #7f8c8d;
    margin-bottom: 5px;
}

.stat-change {
    font-size: 0.9em;
}

.stat-change.positive {
    color: #27ae60;
}

.stat-change.negative {
    color: #e74c3c;
}

.log-entry {
    padding: 8px 12px;
    border-bottom: 1px solid #ecf0f1;
    font-size: 0.9em;
}

.log-entry:hover {
    background: #f8f9fa;
}

.log-timestamp {
    color: #7f8c8d;
    font-weight: bold;
}

.log-mac {
    color: #3498db;
    font-weight: bold;
}

.log-endpoint {
    color: #2c3e50;
}

.log-ip {
    color: #e67e22;
}

.status-200 { color: #27ae60; }
.status-400 { color: #f39c12; }
.status-404 { color: #e74c3c; }
.status-500 { color: #8e44ad; }

.chart-container {
    position: relative;
    height: 300px;
    margin: 20px 0;
}

.mac-stats-table {
    max-height: 400px;
    overflow-y: auto;
}

.live-logs {
    max-height: 500px;
    overflow-y: auto;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.online-indicator {
    display: inline-block;
    width: 10px;
    height: 10px;
    background: #27ae60;
    border-radius: 50%;
    margin-right: 5px;
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
}
</style>

<div class="page-content">
    <div class="panel">
        <div class="panel-heading">
            <h3 class="panel-title">
                <span class="online-indicator"></span>
                Live Monitoring Dashboard
            </h3>
        </div>
        <div class="panel-body">
            <!-- Statistics Cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="monitoring-card stat-card">
                        <div class="stat-label">Total Requests</div>
                        <div class="stat-number" id="totalRequests">0</div>
                        <div class="stat-change" id="requestsChange">+0%</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="monitoring-card stat-card">
                        <div class="stat-label">Total Devices</div>
                        <div class="stat-number" id="totalDevices">0</div>
                        <div class="stat-change" id="devicesChange">+0%</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="monitoring-card stat-card">
                        <div class="stat-label">Activated Devices</div>
                        <div class="stat-number" id="activatedDevices">0</div>
                        <div class="stat-change" id="activatedChange">+0%</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="monitoring-card stat-card">
                        <div class="stat-label">Daily Transactions</div>
                        <div class="stat-number" id="dailyTransactions">0</div>
                        <div class="stat-change" id="transactionsChange">+0%</div>
                    </div>
                </div>
            </div>

            <!-- Charts Row -->
            <div class="row">
                <div class="col-md-6">
                    <div class="monitoring-card">
                        <h4>Device Registrations (Last 7 Days)</h4>
                        <div class="chart-container">
                            <canvas id="registrationChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="monitoring-card">
                        <h4>Platform Distribution</h4>
                        <div class="chart-container">
                            <canvas id="platformChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Live Logs and MAC Stats -->
            <div class="row">
                <div class="col-md-8">
                    <div class="monitoring-card">
                        <h4>Live API Requests <span class="badge" id="logCount">0</span></h4>
                        <div class="live-logs" id="liveLogs">
                            <div class="text-center p-3 text-muted">
                                Waiting for API requests...
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="monitoring-card">
                        <h4>Top MAC Addresses</h4>
                        <div class="mac-stats-table" id="macStats">
                            <div class="text-center p-3 text-muted">
                                Loading MAC statistics...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let socket;
let registrationChart, platformChart;
let stats = {};

// Initialize Socket.IO connection
function initSocket() {
    socket = io();

    socket.on('connect', function() {
        console.log('Connected to monitoring dashboard');
        $('.online-indicator').css('background', '#27ae60');
    });

    socket.on('disconnect', function() {
        console.log('Disconnected from monitoring dashboard');
        $('.online-indicator').css('background', '#e74c3c');
    });

    socket.on('new-request', function(logEntry) {
        addLogEntry(logEntry);
    });

    socket.on('newRequest', function(data) {
        addLogEntry(data);
        updateRealTimeStats(data);
    });
}

// Load initial statistics
function loadStats() {
    $.ajax({
        url: '/admin/monitoring/stats',
        method: 'GET',
        success: function(data) {
            console.log('Loaded stats:', data);
            stats = data;
            updateStatCards(data);
            updateCharts(data);
            updateMacStats(data.macStats);
            displayRealtimeLogs(data.realtimeLogs);
        },
        error: function(xhr, status, error) {
            console.error('Error loading stats:', error);
        }
    });
}

// Update statistic cards
function updateStatCards(data) {
    $('#totalRequests').text(data.totalRequests || 0);
    $('#totalDevices').text(data.totalDevices || 0);
    $('#activatedDevices').text(data.activatedDevices || 0);
    $('#dailyTransactions').text(data.dailyTransactions || 0);

    updateChangeIndicator('#requestsChange', data.requestsChange);
    updateChangeIndicator('#devicesChange', data.devicesChange);
    updateChangeIndicator('#activatedChange', data.activatedChange);
    updateChangeIndicator('#transactionsChange', data.transactionsChange);
}

// Update change indicators
function updateChangeIndicator(selector, change) {
    const element = $(selector);
    const value = change || 0;
    element.text((value >= 0 ? '+' : '') + value + '%');
    element.removeClass('positive negative');
    element.addClass(value >= 0 ? 'positive' : 'negative');
}

// Update charts
function updateCharts(data) {
    // Registration Chart
    if (registrationChart) {
        registrationChart.destroy();
    }

    const regCtx = document.getElementById('registrationChart').getContext('2d');
    registrationChart = new Chart(regCtx, {
        type: 'line',
        data: {
            labels: data.registrations?.labels || [],
            datasets: [{
                label: 'Device Registrations',
                data: data.registrations?.data || [],
                borderColor: '#3498db',
                backgroundColor: 'rgba(52, 152, 219, 0.1)',
                fill: true
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Platform Chart
    if (platformChart) {
        platformChart.destroy();
    }

    const platCtx = document.getElementById('platformChart').getContext('2d');
    platformChart = new Chart(platCtx, {
        type: 'doughnut',
        data: {
            labels: data.platforms?.labels || [],
            datasets: [{
                data: data.platforms?.data || [],
                backgroundColor: [
                    '#3498db',
                    '#e74c3c',
                    '#f39c12',
                    '#27ae60',
                    '#9b59b6'
                ]
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
}

// Add new log entry
function addLogEntry(logEntry) {
    const logsContainer = $('#liveLogs');

    // Remove "waiting" message if it exists
    if (logsContainer.find('.text-muted').length > 0) {
        logsContainer.empty();
    }

    const timestamp = new Date(logEntry.timestamp || Date.now()).toLocaleTimeString();
    const statusClass = `status-${Math.floor((logEntry.status || 200) / 100) * 100}`;

    const logHtml = `
        <div class="log-entry">
            <span class="log-timestamp">${timestamp}</span>
            <span class="log-mac">${logEntry.macAddress || 'N/A'}</span>
            <span class="log-endpoint">${logEntry.endpoint || logEntry.url || 'N/A'}</span>
            <span class="log-ip">${logEntry.ip || 'N/A'}</span>
            <span class="badge ${statusClass}">${logEntry.status || 200}</span>
        </div>
    `;

    logsContainer.prepend(logHtml);

    // Keep only last 50 entries
    const entries = logsContainer.find('.log-entry');
    if (entries.length > 50) {
        entries.slice(50).remove();
    }

    // Update log count
    $('#logCount').text(entries.length);
}

// Display realtime logs
function displayRealtimeLogs(logs) {
    const logsContainer = $('#liveLogs');
    logsContainer.empty();

    if (logs && logs.length > 0) {
        logs.forEach(function(log) {
            addLogEntry(log);
        });
    } else {
        logsContainer.html('<div class="text-center p-3 text-muted">No recent API requests</div>');
    }
}

// Update MAC address statistics
function updateMacStats(macStats) {
    const container = $('#macStats');
    container.empty();

    if (macStats && macStats.length > 0) {
        macStats.slice(0, 10).forEach(function(mac) {
            const macHtml = `
                <div class="p-2 border-bottom">
                    <div class="font-weight-bold text-primary">${mac.macAddress || 'Unknown'}</div>
                    <small class="text-muted">
                        Requests: ${mac.totalRequests || 0} | 
                        IPs: ${mac.ipCount || 0}
                    </small>
                </div>
            `;
            container.append(macHtml);
        });
    } else {
        container.html('<div class="text-center p-3 text-muted">No MAC statistics available</div>');
    }
}

// Update real-time stats
function updateRealTimeStats(data) {
    if (data.totalRequests) {
        $('#totalRequests').text(data.totalRequests);
    }
    if (data.activeDevices) {
        $('#totalDevices').text(data.activeDevices);
    }
}

// Auto-refresh data every 30 seconds
function startAutoRefresh() {
    setInterval(function() {
        loadStats();
    }, 30000);
}

// Initialize dashboard
$(document).ready(function() {
    console.log('Initializing monitoring dashboard...');
    initSocket();
    loadStats();
    startAutoRefresh();
});
</script>