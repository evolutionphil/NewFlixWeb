name: Deploy to Production
on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USERNAME}}
          key: ${{secrets.SERVER_KEY}}
          script: |
            set -e  # Exit on any error
            
            echo "üöÄ Starting deployment..."
            cd /root/apps/NewFlixWeb
            
            # Stash any local changes
            git add .
            git stash --include-untracked || echo "No changes to stash"
            
            # Pull latest changes
            echo "üì¶ Pulling latest code..."
            git pull origin main
            
            # Setup Node.js environment properly (fix fnm issue)
            echo "üîß Setting up Node.js environment..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            
            # Fallback to system node if nvm/fnm not available
            if ! command -v node &> /dev/null; then
                echo "Using system Node.js"
                export PATH="/usr/bin:$PATH"
            fi
            
            # Verify Node.js installation
            echo "Node.js version: $(node --version)"
            echo "NPM version: $(npm --version)"
            
            # Install dependencies (use ci for production)
            echo "üìã Installing dependencies..."
            npm ci --production --silent || npm install --production --silent
            
            # Verify critical files exist
            if [ ! -f "server.js" ]; then
                echo "‚ùå server.js not found!"
                exit 1
            fi
            
            # Stop existing process gracefully
            echo "üõë Stopping existing application..."
            pm2 stop flixiptv || pm2 delete flixiptv || echo "No process to stop"
            
            # Wait a moment for cleanup
            sleep 2
            
            # Start application with ecosystem config
            echo "üöÄ Starting application..."
            pm2 start ecosystem.config.js --env production
            
            # Wait for application to initialize
            sleep 5
            
            # Check if application is running properly
            echo "üîç Checking application status..."
            APP_STATUS=$(pm2 show flixiptv | grep "status" | awk '{print $4}' || echo "stopped")
            RESTART_COUNT=$(pm2 show flixiptv | grep "restarts" | awk '{print $3}' || echo "0")
            
            if [ "$APP_STATUS" = "online" ] && [ "$RESTART_COUNT" -lt 5 ]; then
                echo "‚úÖ Application deployed successfully!"
                pm2 status flixiptv
            else
                echo "‚ùå Application deployment failed or is crash-looping"
                echo "Status: $APP_STATUS, Restarts: $RESTART_COUNT"
                echo "üìã Recent logs:"
                pm2 logs flixiptv --lines 30 --nostream
                exit 1
            fi
            
            # Save PM2 process list
            pm2 save
            
            echo "üéâ Deployment completed successfully!"